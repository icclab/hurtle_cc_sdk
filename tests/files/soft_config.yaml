heat_template_version: 2013-05-23
description: Simple template to deploy a single compute instance 

parameters:

  private_mgmt_net: 
    type: string
    description: >
      ID of private network mgmt
    default: 0bb4b712-78cd-478f-883b-1b801d57778a

  public_net: 
    type: string
    description: >
      ID of public network
    default: 6a8f5f28-cfcc-48f5-8799-a51f259ab227

resources:
  
  config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: foo
      - name: bar
      outputs:
      - name: result
      config: |
        #!/bin/sh -x
        echo "Writing to /tmp/$bar"
        echo $foo > /tmp/$bar
        echo -n "The file /tmp/$bar contains `cat /tmp/$bar` for server $deploy_server_id during $deploy_action" > $heat_outputs_path.result
        echo "Written to /tmp/$bar"
        echo "Output to stderr" 1>&2
 
  deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: config
      server:
        get_resource: server
      input_values:
        foo: {get_param: private_mgmt_net}
        bar: baaaaa
 
  server:
    type: OS::Nova::Server
    properties:
      image: ubuntu_soft_config
      flavor: m1.small
      networks:
        - port: { get_resource: my_port }
      user_data_format: SOFTWARE_CONFIG
 
  my_port:
    type: OS::Neutron::Port
    properties:
      network_id: {get_param: private_mgmt_net}

  my_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net}
      port_id: { get_resource:  my_port }

outputs:
  result:
    value:
      get_attr: [deployment, result]
  stdout:
    value:
      get_attr: [deployment, deploy_stdout]
  stderr:
    value:
      get_attr: [deployment, deploy_stderr]
  status_code:
    value:
      get_attr: [deployment, deploy_status_code]